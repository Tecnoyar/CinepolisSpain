<Activity mc:Ignorable="sap sap2010" x:Class="StandardiseInputData" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:moie="clr-namespace:Microsoft.Office.Interop.Excel;assembly=Microsoft.Office.Interop.Excel" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_Config" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property Name="out_InputDataTable" Type="InOutArgument(sd:DataTable)" />
    <x:Property Name="inputSheetName" Type="InArgument(x:String)" />
    <x:Property Name="in_InputFileName" Type="InArgument(x:String)" />
    <x:Property Name="out_VIPDataTable" Type="InOutArgument(sd:DataTable)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1008,1619</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>StandardiseInputData_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="28">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="30">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="StandardiseInputData" sap:VirtualizedContainerService.HintSize="380,1554" sap2010:WorkflowViewState.IdRef="Sequence_4">
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsPinned">False</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:ReadRange Range="{x:Null}" AddHeaders="True" DataTable="[out_InputDataTable]" DisplayName="ReadInputFile" sap:VirtualizedContainerService.HintSize="338,87" sap2010:WorkflowViewState.IdRef="ReadRange_1" SheetName="[inputSheetName]" WorkbookPath="C:\Users\HP\Downloads\transactionReportsExcel05-12-2021.xlsx" />
    <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DataTable="[out_InputDataTable]" DisplayName="For Each Row in Data Table" sap:VirtualizedContainerService.HintSize="338,372" sap2010:WorkflowViewState.IdRef="ForEachRow_1">
      <ui:ForEachRow.Body>
        <ActivityAction x:TypeArguments="sd:DataRow">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="sd:DataRow" Name="CurrentRow" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="304,252" sap2010:WorkflowViewState.IdRef="Sequence_2">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_1">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Object">[CurrentRow.Item("Show_Time")]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Object">[Split(CurrentRow.Item("Show_Time").ToString," ")(0)]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_2">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Object">[CurrentRow.Item("Name")]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[If(system.Text.RegularExpressions.Regex.IsMatch(CurrentRow.Item("Name").ToString,"[0-9]") or CurrentRow.Item("Name").ToString.Contains("!") or CurrentRow.Item("Name").ToString.Contains("@") or CurrentRow.Item("Name").ToString.Contains("#") or CurrentRow.Item("Name").ToString.Contains("$") or CurrentRow.Item("Name").ToString.Contains("%") or CurrentRow.Item("Name").ToString.Contains("^") or CurrentRow.Item("Name").ToString.Contains("\") or CurrentRow.Item("Name").ToString.Contains("/") or CurrentRow.Item("Name").ToString.Contains("&amp;") or CurrentRow.Item("Name").ToString.Contains("*")," ",CurrentRow.Item("Name").ToString)]</InArgument>
              </Assign.Value>
            </Assign>
          </Sequence>
        </ActivityAction>
      </ui:ForEachRow.Body>
    </ui:ForEachRow>
    <ui:FilterDataTable DataTable="[out_InputDataTable]" DisplayName="Remove empty email field" FilterRowsMode="Remove" sap:VirtualizedContainerService.HintSize="338,59" sap2010:WorkflowViewState.IdRef="FilterDataTable_1" OutputDataTable="[out_InputDataTable]" SelectColumnsMode="Keep">
      <ui:FilterDataTable.Filters>
        <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
          <ui:FilterOperationArgument Operand="{x:Null}" BooleanOperator="And" Operator="EMPTY">
            <ui:FilterOperationArgument.Column>
              <InArgument x:TypeArguments="x:String">["Email"]</InArgument>
            </ui:FilterOperationArgument.Column>
          </ui:FilterOperationArgument>
        </scg:List>
      </ui:FilterDataTable.Filters>
      <ui:FilterDataTable.SelectColumns>
        <scg:List x:TypeArguments="InArgument" Capacity="4">
          <x:Null />
        </scg:List>
      </ui:FilterDataTable.SelectColumns>
    </ui:FilterDataTable>
    <ui:FilterDataTable DataTable="[out_InputDataTable]" DisplayName="Filter luxury table" FilterRowsMode="Keep" sap:VirtualizedContainerService.HintSize="338,59" sap2010:WorkflowViewState.IdRef="FilterDataTable_2" OutputDataTable="[out_VIPDataTable]" SelectColumnsMode="Keep">
      <ui:FilterDataTable.Filters>
        <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
          <ui:FilterOperationArgument BooleanOperator="And" Operator="EQ">
            <ui:FilterOperationArgument.Column>
              <InArgument x:TypeArguments="x:String">["Cinema_ID"]</InArgument>
            </ui:FilterOperationArgument.Column>
            <ui:FilterOperationArgument.Operand>
              <InArgument x:TypeArguments="x:String">["1296"]</InArgument>
            </ui:FilterOperationArgument.Operand>
          </ui:FilterOperationArgument>
        </scg:List>
      </ui:FilterDataTable.Filters>
      <ui:FilterDataTable.SelectColumns>
        <scg:List x:TypeArguments="InArgument" Capacity="4">
          <x:Null />
        </scg:List>
      </ui:FilterDataTable.SelectColumns>
    </ui:FilterDataTable>
    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke ClearExcelData workflow" sap:VirtualizedContainerService.HintSize="338,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="Framework\ClearExcelData.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="x:String" x:Key="inFileName">C:\Users\HP\Downloads\transactionReportsExcel05-12-2021.xlsx</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_SheetName">Transaction</InArgument>
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
    <ui:FilterDataTable DataTable="[out_InputDataTable]" DisplayName="Remove luxury Data in transaction" FilterRowsMode="Remove" sap:VirtualizedContainerService.HintSize="338,59" sap2010:WorkflowViewState.IdRef="FilterDataTable_3" OutputDataTable="[out_InputDataTable]" SelectColumnsMode="Keep">
      <ui:FilterDataTable.Filters>
        <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
          <ui:FilterOperationArgument BooleanOperator="And" Operator="EQ">
            <ui:FilterOperationArgument.Column>
              <InArgument x:TypeArguments="x:String">["Cinema_ID"]</InArgument>
            </ui:FilterOperationArgument.Column>
            <ui:FilterOperationArgument.Operand>
              <InArgument x:TypeArguments="x:String">["1296"]</InArgument>
            </ui:FilterOperationArgument.Operand>
          </ui:FilterOperationArgument>
        </scg:List>
      </ui:FilterDataTable.Filters>
      <ui:FilterDataTable.SelectColumns>
        <scg:List x:TypeArguments="InArgument" Capacity="4">
          <x:Null />
        </scg:List>
      </ui:FilterDataTable.SelectColumns>
    </ui:FilterDataTable>
    <ui:WriteRange AddHeaders="True" DataTable="[out_InputDataTable]" DisplayName="Write manipulatedDataIntoInputExcelFile" sap:VirtualizedContainerService.HintSize="338,115" sap2010:WorkflowViewState.IdRef="WriteRange_1" SheetName="[inputSheetName]" StartingCell="A1" WorkbookPath="C:\Users\HP\Downloads\transactionReportsExcel05-12-2021.xlsx" />
    <ui:InvokeCode ContinueOnError="{x:Null}" Code="Try&#xA; &#xA; app = New Microsoft.Office.Interop.Excel.ApplicationClass()&#xA;workbook= app.Workbooks.Open(Filename.Trim)&#xA;worksheet = CType(workbook.Worksheets(Sheetname.Trim),Microsoft.Office.Interop.Excel.Worksheet)&#xA;&#xA;worksheet.Name = NewWorkSheetName&#xA;&#xA;&#xA;workbook.Save&#xA;&#xA;workbook.Close&#xA;&#xA;Catch ex As Exception&#xA;End Try&#xA;&#xA;" DisplayName="Private: Invoke code to change sheet name" sap:VirtualizedContainerService.HintSize="338,164" sap2010:WorkflowViewState.IdRef="InvokeCode_1">
      <ui:InvokeCode.Arguments>
        <InArgument x:TypeArguments="moie:Workbook" x:Key="workbook" />
        <InArgument x:TypeArguments="moie:Worksheet" x:Key="worksheet" />
        <InArgument x:TypeArguments="s:GC" x:Key="gc" />
        <InArgument x:TypeArguments="x:String" x:Key="Filename">
          <Literal x:TypeArguments="x:String">C:\Users\HP\Downloads\transactionReportsExcel05-12-2021.xlsx</Literal>
        </InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="Sheetname">
          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_Config(&quot;InputSheetName&quot;).ToString" />
        </InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="NewWorkSheetName">
          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_Config(&quot;InputSheetNewName&quot;).ToString" />
        </InArgument>
        <InArgument x:TypeArguments="moie:Application" x:Key="app" />
      </ui:InvokeCode.Arguments>
    </ui:InvokeCode>
    <ui:WriteRange AddHeaders="True" DataTable="[out_VIPDataTable]" DisplayName="Write manipulatedDataIntoInputExcelFile" sap:VirtualizedContainerService.HintSize="338,115" sap2010:WorkflowViewState.IdRef="WriteRange_2" SheetName="[in_Config(&quot;InputVIPSheetName&quot;).ToString]" StartingCell="A1" WorkbookPath="[&quot;C:\Users\&quot;+Environment.UserName+&quot;\Desktop\&quot;+Path.GetFileNameWithoutExtension(in_InputFileName)+&quot;.xlsx&quot;]" />
  </Sequence>
</Activity>